serve:
  hostname: 0.0.0.0
  playground: true
sources:
  - name: Product
    handler:
      openapi:
        source: http://localhost:9080/v1.0/invoke/product/method/api-schema
        endpoint: http://localhost:9080/v1.0/invoke/product/method/
        operationHeaders:
          traceparent: "{context.headers['traceparent']}"
          tracestate: "{context.headers['tracestate']}"
    transforms:
      - rename:
          renames:
            - from:
                type: Query
                field: getProducts
              to:
                type: Query
                field: products
            - from:
                type: Query
                field: getProduct
              to:
                type: Query
                field: product
            - from:
                type: Query
                field: getProductVariant
              to:
                type: Query
                field: productVariant
  - name: Inventory
    handler:
      openapi:
        source: http://localhost:9080/v1.0/invoke/inventory/method/api-schema
        endpoint: http://localhost:9080/v1.0/invoke/inventory/method/
        operationHeaders:
          traceparent: "{context.headers['traceparent']}"
          tracestate: "{context.headers['tracestate']}"
    transforms:
      - rename:
        - from:
            type: query_getInventoryItems_items_inventoryState
          to:
            type: InventoryState

transforms:
  - rename:
      renames:
        - from:
            type: (.*)DTO
          to:
            type: $1
          useRegExpForTypes: true
  - filterSchema:
      filters:
        - Query.!getProductVariants
        - Query.!getInventoryItems
additionalTypeDefs: |
  extend type ProductDTO {
    variants: [ProductVariantDTO] @resolveTo(
      sourceName: "Product",
      sourceTypeName: "Query",
      sourceFieldName: "getProductVariants",
      requiredSelectionSet: "{ id }"
      sourceArgs: {
        id: "{root.id}"
      }
    )
  }

  extend type ProductVariantDTO {
    items: [InventoryItemDTO] @resolveTo(
      sourceName: "Inventory",
      sourceTypeName: "Query",
      sourceFieldName: "getInventoryItems",
      requiredSelectionSet: "{ id }"
      sourceArgs: {
        id: "{root.id}"
      }
    )
  }